/*
 * Pets API
 *
 * A simple API to manage pets
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"net/http"
)

// CatsAPIRouter defines the required methods for binding the api requests to a responses for the CatsAPI
// The CatsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a CatsAPIServicer to perform the required actions, then write the service results to the http response.
type CatsAPIRouter interface {
	CreateCat(http.ResponseWriter, *http.Request)
	GetCat(http.ResponseWriter, *http.Request)
	GetCats(http.ResponseWriter, *http.Request)
	UpdateCat(http.ResponseWriter, *http.Request)
}

// DogsAPIRouter defines the required methods for binding the api requests to a responses for the DogsAPI
// The DogsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a DogsAPIServicer to perform the required actions, then write the service results to the http response.
type DogsAPIRouter interface {
	GetDogs(http.ResponseWriter, *http.Request)
}

// CatsAPIServicer defines the api actions for the CatsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CatsAPIServicer interface {
	CreateCat(context.Context, CreatedCat) (ImplResponse, error)
	GetCat(context.Context, string) (ImplResponse, error)
	GetCats(context.Context) (ImplResponse, error)
	UpdateCat(context.Context, string, UpdatedCat) (ImplResponse, error)
}

// DogsAPIServicer defines the api actions for the DogsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type DogsAPIServicer interface {
	GetDogs(context.Context) (ImplResponse, error)
}

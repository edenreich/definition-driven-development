openapi: 3.0.2
info:
  title: Pets API
  description: A simple API to manage pets
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local server
  - url: https://api.example.com
    description: Production server
paths:
  /cats:
    get:
      tags:
        - Cats
      operationId: getCats
      summary: Get a list of all cats
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
              examples:
                Cats:
                  value:
                    - id: "a3b58e17-0a89-4d84-a3d2-89c4bf4ebec3"
                      name: Fluffy
                      breed: Persian
                      age: 2
                    - id: "8a5e1b27-c7f5-4d46-91b8-25bbce6d3a14"
                      name: Muffin
                      breed: Siamese
                      age: 4
    post:
      tags:
        - Cats
      operationId: createCat
      summary: Create a new cat
      requestBody:
        required: true
        content:
          application/json:
            examples:
              CreatedCat:
                value:
                  id: "a3b58e17-0a89-4d84-a3d2-89c4bf4ebec3"
                  name: Fluffy
                  breed: Persian
                  age: 2
            schema:
              $ref: '#/components/schemas/CreatedCat'
      responses:
        '201':
          description: Cat created successfully
          content:
            application/json:
              examples:
                CreatedCat:
                  value:
                    id: "a3b58e17-0a89-4d84-a3d2-89c4bf4ebec3"
                    name: Fluffy
                    breed: Persian
                    age: 2
  /cats/{id}:
    get:
      tags:
        - Cats
      operationId: getCat
      summary: Get information about a specific cat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Cat:
                  value:
                    id: "a3b58e17-0a89-4d84-a3d2-89c4bf4ebec3"
                    name: Fluffy
                    breed: Persian
                    age: 2
        '404':
          description: Cat not found
    put:
      tags:
        - Cats
      operationId: updateCat
      summary: Update information about a specific cat
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            examples:
              UpdatedCat:
                value:
                  id: "a3b58e17-0a89-4d84-a3d2-89c4bf4ebec3"
                  name: Fluffy
                  breed: Persian
                  age: 3
            schema:
              $ref: '#/components/schemas/Cat'
      responses:
        '200':
          description: Cat updated successfully
components:
  schemas:
    Cat:
      type: object
      required:
        - name
        - breed
        - age
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        breed:
          type: string
        age:
          type: integer
    CreatedCat:
      allOf:
        - $ref: '#/components/schemas/Cat'
    UpdatedCat:
      allOf:
        - $ref: '#/components/schemas/Cat'
